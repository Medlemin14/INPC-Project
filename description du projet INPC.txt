### **Description détaillée du projet : Système de Calcul de l'Indice National des Prix à la Consommation (INPC)**

#### **Introduction :**
Ce projet consiste à développer une application web permettant de calculer l'Indice National des Prix à la Consommation (INPC). L'application permet de gérer les produits, les points de vente, les régions géographiques, et les prix associés. Elle inclut également une fonctionnalité pour importer des données via des fichiers Excel et les stocker dans une base de données MySQL. Le projet est développé avec **Django** pour le backend et **Docker** pour la gestion des environnements.

---

### **Objectifs du projet :**
1. Calculer automatiquement l'INPC à partir des données chargées dans le système.
2. Offrir une interface CRUD (Créer, Lire, Mettre à jour, Supprimer) pour gérer les données relatives aux produits, points de vente, régions et prix.
3. Permettre l'importation des données sous forme de fichier Excel structuré.
4. Utiliser une base de données relationnelle **MySQL** pour stocker les informations.
5. S'assurer que le projet est structuré avec une bonne gestion des versions via GitHub, et prêt pour une collaboration efficace.

---

### **Technologies utilisées :**
1. **Backend :** Django
2. **Base de données :** MySQL
3. **Gestion des versions :** GitHub
4. **Environnement de développement :** Docker
5. **Langage :** Python
6. **Outils d'importation de données :** Bibliothèques Python comme `pandas` ou `openpyxl` pour traiter les fichiers Excel.
7. **Frontend (optionnel pour affichage simple) :** Django templates .

---

### **Fonctionnalités principales :**

#### **1. Gestion CRUD :**
- **Produits :**
  - Ajouter, lire, mettre à jour et supprimer des produits.
  - Associer un produit à un groupe de produits (exemple : Alimentation, Transport, Logement).
  - Inclure des pondérations pour chaque produit.
  
- **Points de vente :**
  - Ajouter, lire, mettre à jour et supprimer des points de vente.
  - Associer chaque point de vente à une région spécifique.

- **Régions géographiques :**
  - Gérer les régions géographiques couvertes (exemple : Nouakchott, Rosso, Aioun).

- **Prix :**
  - Ajouter, lire, mettre à jour et supprimer les relevés de prix mensuels pour chaque produit.
  - Associer chaque relevé de prix à un produit et un point de vente.

#### **2. Calcul de l'INPC :**
- Calcul basé sur la **formule de Laspeyres** :
  \[
  I_t = \frac{\sum (p_t \cdot q_0)}{\sum (p_0 \cdot q_0)} \times 100
  \]
  - \(p_t\) : Prix actuel.
  - \(q_0\) : Quantité consommée (pondération).
  - \(p_0\) : Prix de base (année de référence).

- Calcul effectué sur une période donnée (mensuel ou annuel).
- Présentation des résultats par région, groupe de produits ou point de vente.

#### **3. Importation des données :**
- Importer des fichiers Excel contenant des informations sur les produits, les prix, les points de vente et les régions.
- Valider la structure et le format des données avant l'importation.
- Sauvegarder les données dans la base de données MySQL après validation.

#### **4. Gestion des utilisateurs :**
- Authentification et autorisation via Django.
- Permettre à différents utilisateurs de gérer les données en fonction de leurs rôles (administrateur ou utilisateur standard).

---

### **Structure de la base de données (MySQL) :**

#### **Tables principales :**
1. **GroupsProduits :**
   - `idGroup` (PK) : Identifiant unique.
   - `NomGroup` : Nom du groupe de produits (exemple : Alimentation, Transport).
   - `Pondération` : Pondération de ce groupe.

2. **Produits :**
   - `idProduits` (PK) : Identifiant unique.
   - `NomProduit` : Nom du produit.
   - `GroupsProduits_idGroup` (FK) : Clé étrangère vers `GroupsProduits`.

3. **PointsDeVentes :**
   - `idPointsDeVentes` (PK) : Identifiant unique.
   - `NomPoint` : Nom du point de vente.
   - `Regions_idRegions` (FK) : Clé étrangère vers `Regions`.

4. **Regions :**
   - `idRegions` (PK) : Identifiant unique.
   - `NomRegion` : Nom de la région.

5. **Prix :**
   - `idPrix` (PK) : Identifiant unique.
   - `Produits_idProduits` (FK) : Clé étrangère vers `Produits`.
   - `Prix` : Montant du prix.
   - `Year` : Année et mois du relevé de prix.

6. **Prix_has_PointsDeVentes :**
   - `Prix_idPrix` (FK) : Clé étrangère vers `Prix`.
   - `PointsDeVentes_idPointsDeVentes` (FK) : Clé étrangère vers `PointsDeVentes`.

---

### **Fonctionnalités techniques détaillées :**

#### **1. Importation de données via Excel :**
- Structure attendue des fichiers Excel :
  - **Produits :**
    | ProduitID | NomProduit | GroupeProduit | Pondération |
  - **Points de vente :**
    | PointDeVenteID | NomPoint | Region |
  - **Prix :**
    | ProduitID | PointDeVenteID | Prix | Mois_Annee |

- Traitement des données avec `pandas` pour valider :
  - Les types des colonnes.
  - L’unicité des identifiants.
  - La correspondance des clés étrangères (par exemple, chaque `ProduitID` doit exister dans la table `Produits`).

#### **2. Calcul automatisé de l’INPC :**
- Le calcul sera basé sur les pondérations enregistrées dans `Produits`.
- L’utilisateur peut choisir une période et une région pour voir les résultats.

#### **3. Interface utilisateur :**
- Utilisation de **Django templates** pour créer une interface web simple et intuitive :
  - Tableau interactif pour afficher les produits, les prix et les points de vente.
  - Formulaires pour les opérations CRUD.
- Possibilité de visualiser l'évolution de l'INPC avec des graphiques (optionnel, via **Matplotlib** ou **Chart.js**).

---

### **Étapes pour implémenter le projet :**

#### **Étape 1 : Initialisation du projet**
1. Créez un repository GitHub.
2. Configurez Docker avec Django et MySQL.

#### **Étape 2 : Conception des modèles**
1. Implémentez les modèles Django en suivant la structure de la base de données.
2. Configurez la base de données MySQL dans `settings.py`.

#### **Étape 3 : Gestion CRUD**
1. Créez des vues basées sur Django CBV ou FBV pour chaque table.
2. Configurez les formulaires pour les opérations CRUD.

#### **Étape 4 : Importation de données**
1. Implémentez une vue pour traiter les fichiers Excel.
2. Validez et insérez les données dans MySQL.

#### **Étape 5 : Calcul de l'INPC**
1. Implémentez la logique de calcul dans une vue ou un service Python.
2. Affichez les résultats à l'utilisateur.


---

### **Livrables :**
- Une application web fonctionnelle avec les fonctionnalités suivantes :
  - CRUD sur les produits, points de vente, régions et prix.
  - Calcul automatisé de l’INPC.
  - Importation de données via Excel.
- Documentation complète du projet.

